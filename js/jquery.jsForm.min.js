/*!
 * jQuery.jsForm v1.6.0 | (c) 2015 Niko Berger http://www.gargan.org/
 * Usage: https://github.com/corinis/jsForm
 */

!function(c, s, l) {
    "use strict";
    let i = {}, n = {};
    function t(t, e) {
        let a = c(t);
        this.options = c.extend({}, {
            controls: !0,
            data: null,
            prefix: "data",
            trackChanges: "changed",
            validateHidden: !0,
            skipEmpty: !1,
            renderer: null,
            processors: null,
            dataHandler: null,
            connect: null,
            viewClass: "jsfValue"
        }, e), !a.attr("data-prefix") || "data" !== this.options.prefix && "" !== this.options.prefix || "" !== a.attr("data-prefix") && (this.options.prefix = a.attr("data-prefix")), 
        this.element = t, this._init();
    }
    t.prototype._init = function() {
        if (this._domInit(), this.options.controls) if (c.jsFormControls) c.each(this._getForm(), function() {
            c(this).jsFormControls();
        }); else try {
            "undefined" != typeof console && this._debug("jquery.JsForm.controls not available!");
        } catch (t) {}
        this._fill();
    }, t.prototype.connect = function(t) {
        this._initCollection(t, this.options.prefix), this._initConditional(t, this.options.prefix, this.options), 
        this.options.controls && c.jsFormControls && c(t).jsFormControls(), this._fillDom(t), 
        this.options.connect || (this.options.connect = []), this.options.connect.push(t);
    }, t.prototype.getNodes = function() {
        return this._getForm();
    }, t.prototype._domInit = function() {
        const t = this;
        c.each(this._getForm(), function() {
            t._initCollection(this, t.options.prefix), t._initConditional(this, t.options.prefix, t.options);
        });
    }, t.prototype._debug = function(e, a) {
        try {
            const i = console || (s ? s.console : null);
            if (!i || !i.log) return;
            let t = null;
            t = c.isPlainObject(a) ? JSON.stringify(a, null, " ") : a, t = t || "", i.log(e + t);
        } catch (t) {}
    }, t.prototype._initConditional = function(t, e, a) {
        const s = this;
        let i = function(t, e, a) {
            let i = !1;
            c.each(a, function() {
                var t = s._getValueWithArrays(e, this);
                if ((!c(s).data().condition || t === c(s).data().condition) && t && "" !== t && 0 !== t && -1 !== t) return !(i = !0);
            }), i ? t.show() : t.hide();
        }, n = function(t, e, a) {
            let i = !1;
            c.each(a, function() {
                var t = s._getValueWithArrays(e, this);
                if ((!c(s).data().condition || t === c(s).data().condition) && t && "" !== t && 0 !== t && -1 !== t) return !(i = !0);
            }), i ? t.hide() : t.show();
        };
        this.conditionals = c(t).find(".conditional,.jsf-conditional"), this.conditionals.each(function() {
            c(this).data().conditionalEval = [];
            let t = c(this).attr("data-show");
            t && 0 < t.length && c(this).data().conditionalEval.push({
                func: i,
                field: t.split(" ")
            }), t = c(this).attr("data-hide"), t && 0 < t.length && c(this).data().conditionalEval.push({
                func: n,
                field: t.split(" ")
            }), t = c(this).attr("data-eval"), t && 0 < t.length && a.conditionals[t] && c(this).data().conditionalEval.push({
                func: a.conditionals[t]
            });
        });
    }, t.prototype._evaluateConditionals = function(t, e) {
        this.conditionals.each(function() {
            const t = c(this);
            c.each(t.data().conditionalEval, function() {
                this.func(t, e, this.field);
            });
        });
    }, t.prototype._initCollection = function(t, s) {
        if (!c(t).data().collections) {
            const n = {}, o = this;
            c(t).data().collections = n, c(".collection", t).each(function() {
                const t = c(this).attr("data-field");
                if (t && 0 === t.indexOf(s + ".")) {
                    const e = c(this), a = n[t];
                    if (a ? a.push(e) : n[t] = [ e ], o._initList(e), !e.hasClass("ui-sortable") && e.hasClass("sortable") && e.sortable) {
                        let t = e.attr("data-sortable");
                        t = t ? JSON.parse(t) : {}, e.sortable(t), e.on("sortstop", function() {
                            o._reorder(e);
                        });
                    }
                    c(this).on("add", function(t, e, a) {
                        if (t.target === this) {
                            const s = c(this).attr("data-field");
                            var i = s.substring(s.lastIndexOf(".") + 1);
                            if (!a || s === a || i === a) {
                                const n = c(this).data("template");
                                e = e || {}, n && (t = c(this).children(".POJO").length, a = n.clone(!0), c(a).addClass("POJO"), 
                                o._fillLine(c(this), e, a, i, t), c(this).append(a), c(this).trigger("postAddCollection", [ a, c(a).data().pojo, s ]));
                            }
                        }
                    });
                }
            }), c(".add", t).each(function() {
                const a = c(this).attr("data-field");
                a && 0 === a.indexOf(s + ".") && (c(this).data().collections = n[a], c(this).data().hasJsForm || (c(this).data().hasJsForm = !0, 
                c(this).on("click", function(t) {
                    t.preventDefault();
                    let e = c(this).data().prefill;
                    e ? "function" == typeof e ? e = e() : 2 < e.length && (e = JSON.parse(e)) : e = null, 
                    c.each(c(this).data("collections"), function() {
                        c(this).trigger("add", [ e, a ]);
                    });
                })));
            }), c(".clear", t).each(function() {
                let t = c(this).attr("data-field");
                t && c(this).on("click", function() {
                    c(this).closest(".POJO").find("input[name='" + t + "']").data().pojo = null, c(this).closest(".POJO").find("input[name='" + t + "']").val("").trigger("change");
                });
            }), c(".insert", t).each(function() {
                const t = c(this).data().field;
                if (t && 0 === t.indexOf(s + ".")) {
                    const i = t.substring(t.lastIndexOf(".") + 1);
                    c(this).data().isCollection || (c(this).data().isCollection = !0, c(this).data().collections = n[t], 
                    c(this).on("insert", function(t, e) {
                        if (!(e = e || c(this).data().pojo) && c(this).is("select")) {
                            const a = c(this).find(":selected");
                            a.data().pojo ? e = a.data().pojo : "" !== a.val() && "null" !== a.val() && (e = a.val());
                        }
                        if (e = !e && c(this).hasClass("string") ? c(this).val() : e) {
                            let t = c(this).data().beforeInsert;
                            t && "function" == typeof t && !(e = t(e)) || (c.each(c(this).data("collections"), function() {
                                c(this).trigger("add", [ e, i ]);
                            }), c(this).val(""), c(this).data().pojo = null, c(this).trigger("focus"));
                        }
                    }));
                } else console.log("INSERT: unable to find " + t, this);
            }), c(".insertAction", t).each(function() {
                var e = c(this).data().field;
                if (e) {
                    if (!c(this).data().inserter) {
                        let t = c(this).parent().find(".insert");
                        0 === t.length && (t = c(this).parent().parent().find(".insert")), 0 !== t.length ? (c(this).data().inserter = t, 
                        c(this).on("click", function(t) {
                            return t.preventDefault(), c(this).data().inserter.trigger("insert"), !1;
                        })) : console.log("Unable to find inserter for field: " + e);
                    }
                } else console.log("Field name not specified", this);
            }), c("input.object", t).each(function() {
                c(this).on("update", function(t) {
                    var e = c(this).data().pojo;
                    (c(this).attr("data-display") || c(this).attr("data-render")) && c(this).val(o._renderObject(e, c(this).attr("data-display"), c(this).attr("data-render")));
                });
            }), c("input.blob", t).each(function() {
                if ("file" === c(this).attr("type")) {
                    const a = c(this);
                    c(this).on("change", function(t) {
                        var e = c(this).val().split(/\\/).pop();
                        a.data("name", e);
                        t = t.target.files;
                        t && t.length && c.each(t, function() {
                            const t = new FileReader();
                            t.onload = function(t) {
                                a.data("blob", t.target.result);
                            }, t.readAsDataURL(this), c(this).trigger("fileChange");
                        });
                    });
                }
            });
        }
    }, t.prototype._initList = function(t) {
        if (!t.data("template")) {
            const e = t.children().detach();
            e.removeAttr("id"), t.data("template", e);
        }
    }, t.prototype._getForm = function() {
        const t = [ c(this.element) ];
        return this.options.connect && c.each(this.options.connect, function() {
            t.push(c(this));
        }), t;
    }, t.prototype._clear = function(t, e) {
        e = e || this.options.prefix, c(t).removeData("pojo"), c("input,select,textarea", t).each(function() {
            let t = c(this).attr("name");
            t && 0 === t.indexOf(e + ".") && (t = t.substring((e + ".").length), t.length < 1 || (delete c(this).data().pojo, 
            "checkbox" === c(this).attr("type") || "radio" === c(this).attr("type") ? c(this).prop("checked", !1) : c(this).data().valclass && c(this)[c(this).data().valclass].val ? c(this)[c(this).data().valclass](val, "") : c(this).val(""), 
            c(this).hasClass("blob") && c(this).removeData("blob"), c(this).is("select") && (c('option[selected="selected"]', this).prop("selected", !1), 
            c("option:first", this).prop("selected", !0), c(this).val(c("option:first", this).val()), 
            c(this).trigger("change")), c(this).trigger("change")));
        }), c(".collection", t).each(function() {
            let t = c(this).attr("data-field");
            t && 0 === t.indexOf(e + ".") && c(this).empty();
        });
    }, t.prototype._handleArrayInPojo = function(e, i, s, n) {
        if (i[s] || (i[s] = []), "checkbox" === e.attr("type") || "CHECKBOX" === e.attr("type")) {
            const o = e.is(":checked");
            let a = !0;
            c.each(i[s], function(t, e) {
                if (this == n) return a = !1, o || i[s].splice(e, 1), !1;
            }), a && o && i[s].push(n);
        } else {
            let t = e.attr("data-array");
            t = !t || isNaN(t) ? null : Number(t), null === t ? i[s].push(n) : i[s][t] = n;
        }
    }, t.prototype._setPojoVal = function(t, i, s, n) {
        if (-1 === i.indexOf(".")) n && n.hasClass("array") ? this._handleArrayInPojo(n, t, i, s) : t[i] = s; else {
            var o = i.split(".");
            let e, a = t[o[0]];
            a && c.isPlainObject(a) || (t[o[0]] = {}, a = t[o[0]]);
            for (let t = 1; t < o.length - 1; t++) e = a, a = e[o[t]], a !== l && null !== a || (a = {}, 
            e[o[t]] = a);
            e = o[o.length - 1], n && n.hasClass("array") ? this._handleArrayInPojo(n, a, e, s) : a[e] = s;
        }
    }, t.prototype._createPojoFromInput = function(t, n, o) {
        let e = null;
        const r = this;
        let s = null;
        if (c(t).data().pojo && (e = c(t).data().pojo), e) {
            if ("object" != typeof e) return e;
            c.extend(!0, o, e);
        }
        return c(t).find("input,select,textarea,button,.jsobject,.splitvalue").each(function() {
            let t = c(this).attr("data-name");
            if (t = t || c(this).attr("name"), t && !c(this).hasClass("transient") && !c(this).hasClass("grayed") && 0 === t.indexOf(n + ".")) {
                c(this).trigger("validate", !0), t = t.substring((n + ".").length);
                let e = c(this).val();
                if (c(this).data().valclass && c(this)[c(this).data().valclass] && (e = c(this)[c(this).data().valclass]("val")), 
                c(this).hasClass("jsobject")) e = c(this).data().pojo; else if (c(this).hasClass("splitvalue")) {
                    e = "";
                    const i = c(this).data().separator || " ";
                    c(this).find("input").each(function() {
                        0 !== e.length && (e += i), e += c(this).val();
                    });
                } else {
                    if (r.options.skipEmpty && (!e || "" === e || "" === e.trim())) return;
                    var a;
                    if (!c(this).hasClass("emptynull") || e && "" !== e && "null" !== e && "" !== e.trim() ? c(this).hasClass("object") || c(this).hasClass("POJO") ? (c("option:selected", this).data() && c("option:selected", this).data().pojo ? c("option:selected", this).data().pojo ? e = c("option:selected", this).data().pojo : c("option:selected", this).attr("data-obj") && (e = JSON.parse(c("option:selected", this).attr("data-obj"))) : e = c(this).data().pojo, 
                    e && c(this).data().onylfield && (a = e[c(this).data().onylfield], e = {}, e[c(this).data().onylfield] = a), 
                    "function" == typeof c(this).data().processor ? e = c(this).data().processor(e) : (a = c(this).attr("data-processor")) && r.options.processors[a] && (e = r.options.processors[a](e))) : c(this).hasClass("blob") ? e = c(this).data("blob") : "" === e && (c(this).hasClass("number") || c(this).hasClass("percent") || c(this).hasClass("integer") || c(this).hasClass("dateFilter") || c(this).hasClass("dateTimeFilter")) && (e = null) : e = null, 
                    c(this).data().processor) e = c(this).data().processor(e); else if ("checkbox" === c(this).attr("type") || "CHECKBOX" === c(this).attr("type")) c(this).hasClass("array") ? (e = c(this).val(), 
                    c(this).attr("data-obj") && (e = JSON.parse(c(this).attr("data-obj")))) : e = c(this).is(":checked"); else if ("radio" === c(this).attr("type") || "RADIO" === c(this).attr("type")) {
                        if (!c(this).is(":checked")) return;
                        c(this).hasClass("bool") || c(this).hasClass("boolean") ? e = "true" === c(this).val() : c(this).hasClass("number") && (e = Number(c(this).val()));
                    } else if (c(this).hasClass("number") || c(this).hasClass("integer")) {
                        if (c(this).hasClass("date") && isNaN(e)) if (c.format) {
                            let t = c.format.date(e);
                            t.setHours(0), t.setMinutes(0), t.setSeconds(0), t.setMilliseconds(0), e = t.getTime();
                        } else e = new Date(e).getTime(); else e = c(this).hasClass("number") && isNaN(e) ? r._getNumber(e.replace(":", "")) : r._getNumber(e);
                        isNaN(e) && (e = 0);
                    } else if (c(this).hasClass("bool")) e = "true" === c(this).val(); else if (c(this).hasClass("boolean")) switch (c(this).val()) {
                      case "true":
                        e = !0;
                        break;

                      case "false":
                        e = !1;
                        break;

                      default:
                        e = null;
                    }
                }
                if (r.options.dataHandler && (e = r.options.dataHandler.serialize(e, c(this), o)), 
                t.length < 1) return s = e, !1;
                r._setPojoVal(o, t, e, c(this));
            }
        }), c(t).find(".selectcollection").each(function() {
            let s = c(this).attr("data-field");
            if (s && !c(this).hasClass("transient") && 0 === s.indexOf(n + ".")) {
                c(this).trigger("validate", !0), s = s.substring((n + ".").length);
                let e = [], a = c(this).attr("data-selected"), i = c(this).attr("data-id");
                c(this).children().each(function() {
                    if (a) {
                        if (!c(this).hasClass(a)) return;
                    } else if (!c("input[name='" + s + "']", this).prop("checked")) return;
                    let t = null;
                    i || c("input[name='" + s + "']", this).hasClass("obj") ? (t = c(this).data("obj"), 
                    !t && c(this).attr("data-obj") && (t = JSON.parse(c(this).attr("data-obj")))) : t = c("input[name='" + s + "']", this).val(), 
                    t && e.push(t);
                }), r._setPojoVal(o, s, e);
            }
        }), s;
    }, t.prototype._enableTracking = function(t) {
        if (t && 0 !== t.length) {
            const e = this;
            e.options.trackChanges && !c(t).data().track && (c(t).data().track = !0, c(t).on("change", function() {
                c(this).val() !== c(this).data().orig ? c(this).addClass(e.options.trackChanges) : c(this).removeClass(e.options.trackChanges);
            }));
        }
    }, t.prototype._fillSelectCollection = function(t, e, a, i) {
        const r = this, s = c(t);
        s.find(".selectcollection").each(function() {
            const n = c(this).attr("data-selected"), o = c(this).attr("data-id"), t = c(this).attr("data-field");
            if (t && 0 === t.indexOf(a + ".")) {
                let i = null, s = t;
                a && (s = s.substring(a.length + 1)), i = r._get(e, s), i && Array.isArray(i) || (i = []), 
                n && (c(this).children("." + n).removeClass(n), c(this).children().each(function() {
                    c(this).hasClass("jsfselect") || (c(this).addClass("jsfselect"), c(this).on("click", function() {
                        c(this).toggleClass(n), c(this).trigger("selected");
                    }), c(this).trigger("selected"));
                })), c("input[name='" + s + "']", this).prop("checked", !1), c(this).children().each(function() {
                    let a = "";
                    if (o) {
                        let t = c(this).data("obj");
                        if (!t && c(this).attr("data-obj") && (t = JSON.parse(c(this).attr("data-obj"))), 
                        !t) return;
                        a = t[o];
                    } else a = c("input[name='" + s + "']", this).val();
                    if (a) for (let e = 0; e < i.length; e++) {
                        let t = i[e];
                        if (o && t && (t = t[o]), a == t) return n && c(this).addClass(n).trigger("selected"), 
                        void c("input[name='" + s + "']", this).prop("checked", !0);
                    }
                });
            }
        });
    }, t.prototype._fillFieldData = function(t, n, o, r) {
        const l = this, e = c(t);
        0 < o.indexOf(".") && (o = o.substring(o.indexOf(".") + 1)), e.find(".templatefield").each(function() {
            var t = c(this).data().attr;
            let e = c(this).data().mustache;
            e || ("undefined" != typeof Hogan ? e = Hogan.compile(c(this).data().template.replace(/\[\[/g, "{{").replace(/]]/g, "}}")) : "undefined" != typeof Handlebars ? e = {
                render: Handlebars.compile(c(this).data().template.replace(/\[\[/g, "{{").replace(/]]/g, "}}"))
            } : console.error("No mustache renderer found. templating not available (include Handlebars.js or Hogan.js)"), 
            c(this).data().mustache = e);
            var a = {
                data: l.options.data,
                cur: n
            };
            c(this).attr(t, e.render(a));
        }), e.find(".field").each(function() {
            let a = c(this).data().name;
            a = a || c(this).data().field;
            let i = c(this).attr("data-prefix");
            i = i || "";
            let s = c(this).attr("data-postfix");
            if (s = s || "", a || ("A" === this.nodeName.toUpperCase() ? (a = c(this).attr("href"), 
            c(this).attr("href", "#")) : "IMG" === this.nodeName.toUpperCase() ? (a = c(this).attr("src"), 
            0 === a.indexOf("#") && (a = a.substring(1)), c(this).attr("src", "#")) : a = c(this).text(), 
            c(this).data("name", a), c(this).show()), !o || 0 <= a.indexOf(o + ".")) {
                let t = a;
                o && (t = t.substring(o.length + 1));
                let e = l._get(n, t, !1, r);
                e || 0 === e || !1 === e ? "" !== e && ("" !== i && (e = i + e), "" !== s && (e += s)) : e = c(this).data().alt || "", 
                c(this).hasClass("currency") && (e = e || 0), c(this).hasClass("titleval") && c(this).attr("title", e), 
                c(this).hasClass("setObj") ? (c(this).data().pojo = e, c(this).addClass("POJO")) : (l.options.dataHandler && (e = l.options.dataHandler.deserialize(e, c(this), t, n)), 
                c(this).hasClass("formatter") && c(this).data().formatter && (e = Formatter[c(this).data().formatter](null, null, e)), 
                c.jsFormControls && (e = c.jsFormControls.Format.format(this, e)), "A" === this.nodeName.toUpperCase() ? c(this).attr("href", e) : "IMG" === this.nodeName.toUpperCase() ? c(this).attr("src", e) : "DIV" === this.nodeName.toUpperCase() || c(this).hasClass("noescape") ? c(this).html(e) : c(this).text(e));
            }
        });
    }, t.prototype._fillData = function(t, n, o, r) {
        const l = this, e = c(t);
        0 < o.indexOf(".") && (o = o.substring(o.indexOf(".") + 1)), e.data().refresh || (e.data().refresh = !0, 
        e.on("refresh", function() {
            var t = c(this).data().pojo;
            t && l._fillData(c(this), t, o, r);
        })), c("input,textarea,button,.splitvalue", e).each(function() {
            let e = c(this).attr("name");
            if (e = e || c(this).data().name, e && (l._enableTracking(this), !o || 0 <= e.indexOf(o + "."))) {
                let t = e;
                o && (t = t.substring(o.length + 1));
                let s = l._get(n, t, !1, r);
                if (l.options.dataHandler && (s = l.options.dataHandler.deserialize(s, c(this), t, n)), 
                "file" == c(this).attr("type")) return c(this).data().pojo = s, void c(this).addClass("POJO");
                if (c(this).hasClass("object") ? (c(this).data().pojo = s, c(this).addClass("POJO"), 
                s = l._renderObject(s, c(this).attr("data-display"), c(this).attr("data-render"))) : c(this).hasClass("jsobject") ? (c(this).data().pojo = s, 
                c(this).addClass("POJO")) : c.isPlainObject(s) && (s = "" === t ? "" : (c(this).data().pojo = s, 
                c(this).addClass("POJO"), l._renderObject(s, c(this).attr("data-display"), c(this).attr("data-render")))), 
                "checkbox" === c(this).attr("type")) if (c(this).hasClass("array")) {
                    let e = c(this).val(), a = null;
                    c(this).attr("data-obj") && (e = JSON.parse(c(this).attr("data-obj"))), c(this).attr("data-id") && (a = c(this).attr("data-id"), 
                    e = e[a]);
                    let i = !1;
                    s && c.each(s, function() {
                        let t = this;
                        if (a && (t = t[a]), t == e) return !(i = !0);
                    }), c(this).prop("checked", i);
                } else c(this).prop("checked", !0 === s || "true" === s); else if ("radio" === c(this).attr("type")) c(this).hasClass("bool") ? (!s || "true" !== c(this).val()) && (s || "false" !== c(this).val()) ? c(this).prop("checked", !1) : c(this).prop("checked", !0) : (c(this).hasClass("number"), 
                c(this).prop("checked", s == c(this).val())); else if (c(this).hasClass("splitvalue")) {
                    var a = c(this).data().separator || " ";
                    !s || !c(this).hasClass("datetime") || s.indexOf && -1 != s.indexOf(a) || (s = c.jsFormControls.Format.dateTime(s));
                    const i = s.split ? s.split(a) : [];
                    c(this).find("input").each(function(t) {
                        i.length > t ? c(this).val(i[t]) : c(this).val(""), c(this).trigger("fill"), c(this).trigger("change");
                    });
                } else if (s || 0 === s || !1 === s || (s = ""), c.jsFormControls && (s = c.jsFormControls.Format.format(this, s)), 
                c(this).hasClass("array")) {
                    let t = c(this).attr("data-array");
                    t = !t || isNaN(t) ? null : Number(t), null !== t && s && s.length > t ? c(this).val(s[t]) : c(this).val("");
                } else c(this).data().valclass && c(this)[c(this).data().valclass] ? s.toDate ? c(this)[c(this).data().valclass]("val", s.toDate()) : c(this)[c(this).data().valclass]("val", s) : c(this).val(s);
                l.options.trackChanges && (c(this).data().orig = c(this).val()), c(this).trigger("fill"), 
                c(this).trigger("change");
            }
        }), c("select", e).each(function() {
            let i = c(this).attr("name");
            if (i && (!o || 0 <= i.indexOf(o + "."))) {
                let t = i;
                o && (t = t.substring(o.length + 1)), l._enableTracking(this), c(this).children("option:selected").prop("selected", !1);
                let e = c(this).attr("data-key");
                e = e || "id";
                let a = l._get(n, t, !1, r);
                if (l.options.dataHandler && (a = l.options.dataHandler.deserialize(a, c(this), t, n)), 
                a[e] || !isNaN(a[e])) return c(this).find("option").each(function() {
                    let t = c(this).data().pojo;
                    if (t = t || c(this).data().obj, t) {
                        if (a[e] === t[e]) return c(this).prop("selected", !0), !1;
                    } else if (c(this).val() == a[e]) return c(this).attr("selected", !0), !1;
                }), void c(this).trigger("change").removeClass("changed");
                c(this).hasClass("bool") ? a = a ? "true" : "false" : c(this).hasClass("boolean") && (a = !1 === a ? "false" : a ? "true" : ""), 
                c(this).find("option[value='" + a + "']").prop("selected", !0), c(this).val(a), 
                l.options.trackChanges && (c(this).data().orig = c(this).val()), c(this).trigger("change").trigger("fill").removeClass("changed");
            }
        });
    }, t.prototype.get = function(t) {
        const e = this;
        var a = this.options.data;
        const i = this.options.prefix;
        let s = {};
        a && c.isPlainObject(a) && (s = c.extend({}, a));
        let n = !1;
        return c.each(this._getForm(), function() {
            e._createPojoFromInput(this, i, s), e.options.validateHidden ? this.find(".invalid").each(function() {
                return c(this).is(":hidden") && e._debug("Found invalid hidden field: " + c(this).attr("name")), 
                n = !0, c(this).trigger("focus"), !1;
            }) : this.find(".invalid").filter(":visible").each(function() {
                return n = !0, c(this).trigger("focus"), t || e._debug("Found invalid field: " + c(this).attr("name")), 
                !1;
            }), e._getCollection(this, i, s, t) && (n = !0);
        }), !t && n ? null : s;
    }, t.prototype.getCollection = function(a) {
        if (a) {
            var i = a[0].data().pojo;
            let t = a[0].parent().data().field;
            t = t.substring(t.lastIndexOf(".") + 1);
            let e = {};
            return i && c.isPlainObject(i) && (e = c.extend({}, i)), this._createPojoFromInput(a[0], t, e), 
            e;
        }
        console.debug("Collection Line not given.");
    }, t.prototype._getCollection = function(t, e, s, n) {
        const o = this;
        let r = !1;
        return t.find(".collection").each(function() {
            if (!(!n && r || c(this).hasClass("transient"))) {
                let a = c(this).attr("data-field");
                if (a && 0 === a.indexOf(e + ".")) {
                    a = a.substring((e + ".").length);
                    const i = o._getParent(s, a, !0);
                    -1 !== a.indexOf(".") && (a = a.substring(a.lastIndexOf(".") + 1)), i[a] = [], c(this).children().each(function() {
                        var t = {}, e = o._createPojoFromInput(c(this), a, t);
                        if (e || o._getCollection(c(this), a, t, n), !o._isEmpty(t) || e) {
                            if (0 < c(".invalid", this).length && (r = !0, !n)) return !1;
                            e ? i[a].push(e) : i[a].push(t);
                        } else c(".invalid", this).removeClass("invalid");
                    });
                }
            }
        }), r;
    }, t.prototype.getData = function() {
        return this.options.data || (this.options.data = {}), this.options.data;
    }, t.prototype.fieldMode = function(e, a) {
        if (e) {
            e.data || (e = c("input[name='" + e + "']", this.element));
            var i = this.options.viewClass;
            if (!a) {
                let t = e.closest("span." + i);
                a = e.show().detach();
                return t.before(a), void t.remove();
            }
            if (!e.closest("span." + i)[0]) {
                let t = e.val();
                "null" !== t && null !== t && "submit" !== e.attr("type") || (t = ""), (e.hasClass("trueFalse") || e.hasClass("bool") || e.hasClass("boolean")) && (t = e.is(":checked") ? "X" : "&#160;"), 
                t = t.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/\n/g, "<br/>");
                i = c('<span class="' + i + '">' + t + "</span>");
                (e.parent().hasClass("ui-wrapper") ? e.parent() : e).hide().wrap(i);
            }
        }
    }, t.prototype.preventEditing = function(t) {
        const e = c(this.element), a = this.options.viewClass;
        if (void 0 === t) t = e.data("disabled"); else if (t === e.data("disabled")) return;
        t ? (e.find("input, textarea").each(function() {
            if (!c(this).closest("span." + a)[0] && "hidden" != c(this).attr("type")) {
                let t = c(this).val();
                "null" !== t && null !== t && "submit" !== c(this).attr("type") || (t = ""), (c(this).hasClass("trueFalse") || c(this).hasClass("bool") || c(this).hasClass("boolean")) && (t = c(this).is(":checked") ? "X" : "&#160;");
                let e;
                c(this).hasClass("noescape") ? (e = c('<div class="' + a + '">' + t + "</div>"), 
                e.html(t)) : (t = t.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/\n/g, "<br/>"), 
                e = c('<span class="' + a + '">' + t + "</span>")), (c(this).parent().hasClass("ui-wrapper") ? c(this).parent() : c(this)).hide().before(e);
            }
        }), e.find("select").each(function() {
            if (!c(this).closest("span." + a)[0]) {
                let t = c(this).children(":selected").html();
                "null" !== t && null !== t || (t = "");
                var e = c('<span class="' + a + '">' + t + "</span>");
                (c(this).hasClass("ui-toggle-switch") ? c(this).prev() : c(this)).hide().before(e);
            }
        })) : e.find("span." + a + ",div." + a).each(function() {
            c(this).next("input,select,textarea,.ui-wrapper,.ui-toggle-switch").show();
            c(this).remove();
        }), e.data("disabled", t);
    }, t.prototype.validate = function() {
        let t = !0;
        return c.each(this._getForm(), function() {
            c(".required,.regexp,.date,.mandatory,.number,.validate,.integer,.time,.datetime", this).trigger("change"), 
            0 < c(".invalid", this).length && (t = !1);
        }), t;
    }, t.prototype._fill = function(t) {
        const e = this;
        c(this.element).addClass("POJO"), c(this.element).data("pojo", this.options.data), 
        c.each(this._getForm(), function() {
            try {
                e._fillDom(this, t);
            } catch (t) {
                console.log("Exception while filling form", t, new Error().stack);
            }
        });
    }, t.prototype._fillDom = function(t, e) {
        var a = this;
        e || a._clear(t, a.options.prefix), a._fillFieldData(t, a.options.data, a.options.prefix), 
        e || (a._fillData(t, a.options.data, a.options.prefix), a._fillSelectCollection(t, a.options.data, a.options.prefix)), 
        a._fillCollection(t, a.options.data, a.options.prefix, e), a._evaluateConditionals(t, a.options.data);
    }, t.prototype._fillCollection = function(t, o, r, l) {
        const h = this;
        c(".collection", t).each(function() {
            const a = c(this), t = c(this).attr("data-field");
            if (o && t && 0 === t.indexOf(r + ".")) {
                let e = t;
                r && (e = e.substring(r.length + 1));
                var i = h._get(o, e);
                if (i) if (-1 !== e.indexOf(".") && (e = e.substring(e.lastIndexOf(".") + 1)), l) for (let t = 0; t < i.length; t++) {
                    var s = c(a.children().get(t)), n = i[t];
                    h._fillFieldData(s, n, e, t + 1), h._fillCollection(s, n, e, l);
                } else h._fillList(a, i, e);
            }
        });
    }, t.prototype._fillList = function(e, i, a, s) {
        const n = e.data("template");
        if (n && (e.empty(), Array.isArray(i))) {
            if (-1 !== a.indexOf(".") && (a = a.substring(a.lastIndexOf(".") + 1)), e.hasClass("sort")) {
                let a = e.attr("data-sort");
                if (a) {
                    switch (e.attr("data-sorttype")) {
                      case "alpha":
                        i.sort();
                        break;

                      case "alphainsensitiv":
                        i.sort(function(t, e) {
                            return t = t[a], e = e[a], (t = t && t.toLowerCase()) < (e = e && e.toLowerCase()) ? -1 : e < t ? 1 : 0;
                        });
                        break;

                      default:
                        i.sort(function(t, e) {
                            return t[a] - e[a];
                        });
                    }
                    e.attr("data-sortdesc") && i.reverse();
                }
            }
            s || "function" != typeof a || (s = a, a = null);
            for (let t = 0; t < i.length; t++) {
                var o = i[t];
                const r = n.clone(!0);
                r.data().pojo = o, r.addClass("POJO"), s && !1 === s(r, o) || (this._fillLine(e, o, r, a, t), 
                e.append(r), e.trigger("postAddCollection", [ r, c(r).data().pojo, a ]));
            }
        }
    }, t.prototype._fillLine = function(t, e, a, i, s) {
        const n = this, o = c(a);
        o.data().pojo = e;
        let r = o.data("prefill");
        r = r || o.val("data-prefill"), r && ("function" == typeof r ? r(o.data().pojo, c(a)) : r.substring ? o.data().pojo = JSON.parse(r) : c.isPlainObject(r) && (o.data().pojo = r)), 
        n._enableTracking(c("input,textarea,select", a)), n.options.trackChanges && c("input,textarea,select", a).addClass(n.options.trackChanges), 
        n._addCollectionControls(a), i && !c(a).data().fillLine && (t.trigger("addCollection", [ a, c(a).data().pojo ]), 
        c(a).data().fillLine = !0, c(a).on("refresh", function(t) {
            return n._fillFieldData(o, o.data().pojo, i, s + 1), n._fillData(o, o.data().pojo, i, s + 1), 
            o.trigger("refreshed", [ o, o.data().pojo ]), !1;
        }).trigger("refresh"), n._initCollection(a, i), n._fillCollection(a, e, i));
    }, t.prototype._addCollectionControls = function(t) {
        const s = this, e = c(t).closest(".collection");
        c.jsFormControls && c(t).jsFormControls(), t.on("delete", function(t, e) {
            if (!e || e[0] === this) {
                const i = c(this);
                var a = c(i).data().pojo, e = c(this).closest(".collection");
                i.detach(), c(e).trigger("deleteCollection", [ i, a ]);
            }
        }), t.on("sortUp", function(t, e) {
            if (!e || e[0] === this) {
                const a = c(this), i = a.prev(".POJO");
                0 !== i.size() && (a.detach(), i.before(a), s._reorder(a));
            }
        }), t.on("sortDown", function(t, e) {
            if (!e || e[0] === this) {
                let t = c(this), e = t.next(".POJO");
                0 !== e.size() && (t.detach(), e.after(t), s._reorder(t));
            }
        }), c(".delete", t).on("click", function() {
            let t = c(this).closest(".POJO");
            t.trigger("delete", [ t ]);
        }), c(".sortUp", t).on("click", function() {
            let t = c(this).closest(".POJO");
            t.trigger("sortUp", [ t ]);
        }), c(".sortDown", t).on("click", function() {
            let t = c(this).closest(".POJO");
            t.trigger("sortDown", [ t ]);
        }), e.hasClass("sortable") && c(e).sortable && e.sortable("refresh");
    }, t.prototype._reorder = function(t) {
        t.attr("data-sort") || (t = t.closest(".collection"));
        let a = c(t).attr("data-sort");
        if (!(!a || c(t).attr("data-sorttype") && "number" !== c(t).attr("data-sorttype") || c(t).attr("data-sortdesc") && "false" !== c(t).attr("data-sortdesc"))) {
            let e = 0;
            c.each(c(t).children(), function() {
                let t = c(this).data("pojo");
                t || (t = {}, c(this).data("pojo", t)), t[a] = e++;
            });
        }
    }, t.prototype._renderObject = function(e, t, a) {
        if (!e || !t && !a) return "";
        if (a) return this.options.renderer && this.options.renderer[a] ? this.options.renderer[a](e) : (this._debug("Unable to find renderer: " + a), 
        "");
        const i = this;
        let s = "";
        return c.each(t.split(","), function() {
            let t = this.trim();
            0 === t.indexOf("'") || 0 === t.indexOf('"') ? s += t.substring(1, t.length - 1) : s += i._get(e, t);
        }), s;
    }, t.prototype._get = function(t, e, a, i) {
        let s, n, o = "", r;
        if ("function" == typeof e) return e(t);
        if (!t) return "";
        if ("" === e) return t;
        if ("$idx" === e) return i;
        if (s = t[e], !s) try {
            if ("string" == typeof e && (o = e.split(".")), r = o.length, r) for (s = t; s && r--; ) n = o.shift(), 
            a && !s[n] && (s[n] = {}), s = s[n];
        } catch (t) {}
        return null !== s && s !== l || (s = ""), s.trim ? s.trim() : s;
    }, t.prototype._getValueWithArrays = function(e, a) {
        if (null === e) return null;
        a = a.split(".");
        let i = /(.*)\[(\d+)\]/;
        for (let t = 1; t < a.length; t++) {
            var s = i.exec(a[t]);
            try {
                e = s ? e[s[1]][parseInt(s[2], 10)] : e[a[t]];
            } catch (t) {
                this._debug(a + " " + t);
            }
        }
        return e;
    }, t.prototype._getParent = function(t, e, a) {
        return -1 === e.indexOf(".") ? t : (e = e.substring(0, e.lastIndexOf(".")), this._get(t, e, a));
    }, t.prototype._getNumber = function(t) {
        return t ? c.jsFormControls ? c.jsFormControls.Format._getNumber(t) : (-1 !== t.indexOf(",") && -1 !== t.indexOf(".") ? t = t.replace(/,/g, "") : -1 !== t.indexOf(",") && -1 === t.indexOf(".") && (t = t.replace(/,/g, ".")), 
        Number(t)) : null;
    }, t.prototype._isEmpty = function(t) {
        if (!t) return !0;
        if (Array.isArray(t)) {
            if (0 === t.length) return !0;
            for (const a of t) if (!this._isEmpty(a)) return !1;
            return !0;
        }
        if (c.isPlainObject(t)) {
            if (c.isEmptyObject(t)) return !0;
            for (var e in t) if (!this._isEmpty(t[e])) return !1;
            return !0;
        }
        return isNaN(t) ? "" === t || " " === t : 0 === Number(t) || -1 === Number(t);
    }, t.prototype._equals = function(t, e, a) {
        if (!t && e && e.length && 0 === e.length) return !0;
        if (!e && t && t.length && 0 === t.length) return !0;
        if (!t && !e) return !0;
        let i = null;
        for (i in t) {
            if (void 0 === e[i] && null !== t[i] && "" !== t[i] && 0 !== t[i].length) {
                if (("0" === t[i] || 0 === t[i]) && !e[i]) continue;
                return !1;
            }
            if (t[i]) switch (typeof t[i]) {
              case "object":
                if (a && t[i][a] && t[i][a] === e[i][a]) continue;
                if (!this._equals(t[i], e[i])) return !1;
                break;

              case "function":
                break;

              default:
                if (!t[i] && !e[i]) break;
                if ((!0 === t || !1 === t) && t !== e) return !1;
                if (!isNaN(t[i]) || !isNaN(e[i])) {
                    if (Math.abs(Number(t[i]) - Number(e[i])) < 1e-7) break;
                    return !1;
                }
                if (("" + t[i]).length !== ("" + e[i]).length) return !1;
                if (t[i] !== e[i] && Number(t[i]) !== Number(e[i])) return !1;
            } else if (e[i]) return !1;
        }
        for (i in e) if ((!t || void 0 === t[i]) && null !== e[i] && "" !== e[i]) return !1;
        return !0;
    }, t.prototype.equals = function(t, e) {
        var a = this.get(!1);
        return this._equals(a, t, e);
    }, t.prototype.changed = function() {
        if (!this.options.trackChanges) return !1;
        let t = !1;
        const e = this;
        return c.each(this._getForm(), function() {
            if (0 < c("." + e.options.trackChanges, this).size()) return !(t = !0);
        }), t;
    }, t.prototype.clearChanged = function() {
        const t = this;
        c.each(this._getForm(), function() {
            this.find("." + t.options.trackChanges).removeClass(t.options.trackChanges);
        });
    }, t.prototype.resetChanged = function() {
        if (!this.options.trackChanges) return !1;
        const t = this;
        return c.each(this._getForm(), function() {
            c("." + t.options.trackChanges, this).each(function() {
                c(this).removeClass(t.options.trackChanges), c(this).data().orig = c(this).val();
            });
        }), !1;
    }, t.prototype._equalsCollection = function(t, e, i) {
        const s = this;
        let n = !1;
        return c(".collection", t).each(function() {
            if (!n) {
                let a = c(this).attr("data-field");
                if (a && 0 === a.indexOf(e + ".") && (a = a.substring((e + ".").length), !(a.length < 1))) {
                    let e = 0;
                    c(this).children().each(function() {
                        var t;
                        n || (e >= i[a].length ? n = !0 : (t = i[a][e++], s._pojoDifferFromInput(c(this), a, t) && (n = !0), 
                        s._equalsCollection(c(this), a, t) || (n = !0)));
                    }), i[a] && e < i[a].length && (n = !0);
                }
            }
        }), !n;
    }, t.prototype.fill = function(t) {
        this.options.data = c.extend({}, t), this._fill(), c(this.element).trigger("filled", this, t);
    }, t.prototype.fillFields = function(t) {
        this.options.data = c.extend({}, t), this._fill(!0);
    }, t.prototype.applyConditions = function(t) {
        t = t || this.get(!0), this._evaluateConditionals(this.element, t);
    }, t.prototype.reset = function() {
        this.fill({});
    }, t.prototype.clear = function() {
        const t = this;
        c.each(this._getForm(), function() {
            t._clear(this, t.options.prefix);
        });
    }, t.prototype.destroy = function() {
        return c(this.element).each(function() {
            c(this).removeData("jsForm"), c.jsFormControls && c(this).jsFormControls("destroy");
        });
    }, c.fn.jsForm = function(a) {
        if ("object" != typeof a && a) {
            let t = Array.prototype.slice.call(arguments, 1), e;
            if (0 === this.length) return null;
            if (1 === this.length) if (e = c(this).data("jsForm"), e) return 0 !== a.indexOf("_") && e[a] ? e[a].apply(e, t) : (c.error("Method " + a + " does not exist on jQuery.jsForm"), 
            !1);
            return this.each(function() {
                if (e = c.data(this, "jsForm"), e) return 0 !== a.indexOf("_") && e[a] ? e[a].apply(e, t) : (c.error("Method " + a + " does not exist on jQuery.jsForm"), 
                !1);
            });
        }
        return this.each(function() {
            c(this).data("jsForm") || c(this).data("jsForm", new t(this, a));
        });
    }, c.jsForm = function(t, a) {
        var e = n[t];
        if ("function" == typeof a) e && c.each(e, function() {
            a(this, c(this.element));
        }), i[t] = a; else if (e) {
            let t = a, e = Array.prototype.slice.call(arguments, 2);
            c.each(portlets, function() {
                this[t].apply(this, e);
            });
        }
    };
}(jQuery, window), function(l, n) {
    "use strict";
    const o = {}, r = {};
    function i(t) {
        this.element = t, this._domInit();
    }
    "undefined" != typeof Handlebars && (Handlebars.registerHelper("currency", function(t) {
        return t ? l.jsFormControls.Format.currency(t) : l.jsFormControls.Format.currency(0);
    }), Handlebars.registerHelper("dec", function(t) {
        return t ? l.jsFormControls.Format.decimal(t) : "";
    }), Handlebars.registerHelper("percent", function(t) {
        return t ? l.jsFormControls.Format.decimal(100 * t) : "0";
    }), Handlebars.registerHelper("date", function(t) {
        return t ? l.jsFormControls.Format.date(t) : "";
    }), Handlebars.registerHelper("time", function(t) {
        return t ? l.jsFormControls.Format.time(t) : "";
    }), Handlebars.registerHelper("datetime", function(t) {
        return t ? l.jsFormControls.Format.dateTime(t) : "";
    }), Handlebars.registerHelper("dateTime", function(t) {
        return t ? l.jsFormControls.Format.dateTime(t) : "";
    }), Handlebars.registerHelper("timespan", function(t) {
        return t ? l.jsFormControls.Format.humanTime(t) : "";
    }), Handlebars.registerHelper("humanTime", function(t) {
        return t ? l.jsFormControls.Format.humanTime(t) : "";
    }), Handlebars.registerHelper("byte", function(t) {
        return t ? l.jsFormControls.Format.byte(t) : "";
    }), Handlebars.registerHelper("integer", function(t) {
        return t ? l.jsFormControls.Format.integer(t) : "";
    })), i.prototype._domInit = function() {
        const t = l(this.element);
        t.find("input.mandatory,textarea.mandatory").on("keyup", function() {
            l(this).hasClass("mandatory") && (0 < l(this).val().length && "null" !== l(this).val() ? l(this).addClass("valid").removeClass("invalid") : l(this).removeClass("valid").addClass("invalid"));
        }), t.find("input.mandatory,textarea.mandatory").on("change", function() {
            l(this).hasClass("mandatory") && (l(this).hasClass("object") ? l(this).data().pojo ? l(this).addClass("valid").removeClass("invalid") : l(this).removeClass("valid").addClass("invalid") : 0 < l(this).val().length && "null" !== l(this).val() ? l(this).addClass("valid").removeClass("invalid") : l(this).removeClass("valid").addClass("invalid"));
        }).trigger("change"), t.find("select.mandatory").on("change", function() {
            l(this).hasClass("mandatory") && (null !== l(this).val() && "null" !== l(this).val() && 0 < l(this).val().length ? l(this).addClass("valid").removeClass("invalid") : l(this).removeClass("valid").addClass("invalid"));
        }).trigger("change"), n.flatpickr && n.flatpickr.localize("_lib/3rdparty/flatpickr/l10n/de.js"), 
        t.find("input.date").each(function() {
            let t = null;
            var e = l(this).attr("data-format");
            const s = l(this);
            n.flatpickr ? n.flatpickr(s[0], {
                enableTime: !1,
                allowInput: !0,
                time_24hr: !1,
                disableMobile: !0,
                dateFormat: i18n.flatpickrDate,
                onOpen: [ function(t, e, a) {
                    var i;
                    "" === s.val() ? a.jumpToDate(new Date()) : (i = l.jsFormControls.Format.asDate(s.val()), 
                    a.jumpToDate(i), a.setDate(i, !0));
                } ]
            }) : s.datepicker && (void 0 !== e ? t = e : "undefined" != typeof i18n && (t = i18n.jqdate), 
            t ? l(this).datepicker({
                dateFormat: t
            }) : l(this).datepicker());
        }), t.find("input.dateTime,input.datetime").each(function() {
            let t = null;
            var e = l(this).attr("data-format");
            const s = l(this);
            if (n.flatpickr) n.flatpickr(l(this)[0], {
                enableTime: !0,
                time_24hr: !0,
                allowInput: !0,
                disableMobile: !0,
                dateFormat: i18n.flatpickrDateTime,
                minuteIncrement: 15,
                onOpen: [ function(t, e, a) {
                    var i;
                    "" === s.val() ? a.jumpToDate(new Date()) : (i = l.jsFormControls.Format.asDate(s.val()), 
                    a.jumpToDate(i), a.setDate(i, !0));
                } ]
            }); else if (s.datetimepicker && s.hasClass("form-control")) {
                e ? t = e : "undefined" != typeof i18n && i18n.date && (t = i18n.date.format);
                e = "DTID_" + l(this).attr("name").replace(".", "_");
                const a = l('<div class="input-group date" data-target-input="nearest" data-format="' + t + '"/>');
                a.attr("id", e), s.parent().append(a), s.addClass("datetimepicker-input").attr("data-target", "#" + e);
                const i = l('<div class="input-group-text" data-toggle="datetimepicker"><i class="fa fa-calendar"></i></div>');
                a.append(s), a.append(i), i.attr("data-target", "#" + e), t = t || "dd.MM.yyyy", 
                t += " HH:mm", t = FormatParser.toPhpString(t);
                e = {
                    format: t
                };
                l(this).datetimepicker(e);
            }
        }), t.find("input.time").each(function() {
            l(this).clockpicker && l(this).parent().hasClass("clockpicker") ? (l(this).attr("type", "text"), 
            l(this).parent().clockpicker({
                autoclose: !0,
                placement: "bottom-adaptive"
            })) : n.flatpickr ? n.flatpickr(l(this)[0], {
                enableTime: !0,
                noCalendar: !0,
                dateFormat: "H:i",
                time_24hr: !0,
                disableMobile: !0,
                minuteIncrement: 15,
                onOpen: [ function(t, e, a) {
                    var i;
                    "" !== l(a._input).val() && ([ i, a ] = l(a._input).val().split(":"), l("#flatpickr-time").find(".flatpickr-hour").val(i), 
                    l("#flatpickr-time").find(".flatpickr-minute").val(a));
                } ]
            }) : l(this).datetimepicker && l(this).datetimepicker();
        });
        const e = /^[0-9.,-]+$/;
        t.find("input.number").on("keyup", function() {
            let t = l(this).val();
            l(this).hasClass("currency") && t && (t = l.jsFormControls.Format._getNumber(t)), 
            0 != t.length && (l(this).hasClass("autoclean") ? l(this).val(t.replace(/[^0-9.,-]/g, "")) : e.test(t) ? l(this).addClass("valid").removeClass("invalid") : l(this).removeClass("valid").addClass("invalid"));
        }).trigger("keyup"), t.find("input.currency").each(function() {
            l(this).on("change blur", function() {
                var t = l(this).val();
                0 < t.length && l(this).val(l.jsFormControls.Format.currency(l.jsFormControls.Format._getNumber(t)));
            }), l(this).on("focus", function() {
                var t = l(this).val();
                0 < t.length && l(this).val(l.jsFormControls.Format._getNumber(t)), l(this).select();
            });
        }), t.find("input.percent").on("change", function() {
            var t = l(this).val();
            0 < t.length && l(this).val(l.jsFormControls.Format.decimal(l.jsFormControls.Format._getNumber(t))), 
            l(this).on("focus", function() {
                var t = l(this).val();
                0 < t.length && l(this).val(l.jsFormControls.Format._getNumber(t)), l(this).select();
            });
        }), t.find("input.decimal").on("change", function() {
            var t = l(this).val();
            0 < t.length && l(this).val(l.jsFormControls.Format.decimal(l.jsFormControls.Format._getNumber(t)));
        }), t.find("input.vunit").on("change", function() {
            var t = l(this).val();
            0 < t.length && (t = l.jsFormControls.Format._getNumber(t), l(this).data().val = t, 
            l(this).val(l.jsFormControls.Format.vunit(t, l(this).attr("data-unit"))));
        });
        const a = /\D+$/;
        t.find("input.integer").on("keyup", function() {
            const t = l(this).val();
            0 != t.length && (l(this).hasClass("autoclean") ? l(this).val(t.replace(/\d/g, "")) : a.test(l(this).val()) ? l(this).addClass("valid").removeClass("invalid") : l(this).removeClass("valid").addClass("invalid"));
        }).trigger("keyup"), t.find("input.regexp").each(function() {
            l(this).on("keyup", function() {
                l(this).hasClass("autoclean") ? l(this).data("regexp", new RegExp(l(this).attr("data-regexp"), "g")) : l(this).data("regexp", new RegExp(l(this).attr("data-regexp")));
                const t = l(this).val();
                if (0 < t.length) {
                    const e = l(this).data("regexp");
                    l(this).hasClass("autoclean") ? l(this).val(t.replace(e, "")) : e.test(l(this).val()) ? l(this).addClass("valid").removeClass("invalid") : l(this).removeClass("valid").addClass("invalid");
                } else l(this).hasClass("mandatory") || l(this).removeClass("invalid").addClass("valid");
            }).trigger("keyup"), l(this).on("change", function() {
                l(this).trigger("keyup");
            });
        }), t.find("textarea.markdownedit").each(function() {
            let t = l(this), e = l("<div />");
            e.insertBefore(t), e.css("height", t.css("height")), t.data().editor = new toastui.Editor({
                el: e.get(0),
                toolbarItems: t.data().fullEdit ? [ [ "heading", "bold", "italic", "quote" ], [ "ul", "ol", "task", "indent", "outdent" ], [ "table" ] ] : [ [ "bold", "italic", "quote" ], [ "ul", "ol" ] ],
                height: t.height() + "px",
                initialEditType: "wysiwyg",
                initialValue: l("#PsychTextArea").val(),
                hideModeSwitch: !0,
                events: {
                    change: function() {
                        t.val(t.data().editor.getMarkdown()), t.trigger("change");
                    }
                }
            }), l(this).hide(), t.on("fill", function() {
                t.data().editor.setMarkdown(t.val());
            });
        }), t.find("input.rotatestate").each(function() {
            let t = l(this).attr("data-state-values");
            var e = l(this).attr("data-state-class");
            if (t) {
                try {
                    t = JSON.parse(t);
                } catch (t) {
                    return;
                }
                const a = l("<span></span>");
                l(this).attr("title") && a.attr("title", l(this).attr("title")), l(this).attr("data-state-style") && a.attr("style", l(this).attr("data-state-style")), 
                a.data("states", t), a.data("control", this), a.data("activeState", null), l(this).data("control", a), 
                e && a.addClass(e), a.click(function() {
                    var e = l(this).data().activeState, a = l(this).data().states, t = l(this).data().control;
                    let i = null;
                    if (null !== e) {
                        for (let t = 0; t < a.length; t++) if (a[t].value === e.value) {
                            i = t === a.length - 1 ? a[0] : a[t + 1];
                            break;
                        }
                    } else i = a[0];
                    l(t).attr("value", i.value), l(t).trigger("change");
                }), l(this).on("change", function() {
                    const t = l(l(this).data().control);
                    var e = t.data().activeState, a = t.data().states;
                    null !== e && t.removeClass(e.class);
                    const i = l(this).val();
                    l.each(a, function() {
                        if (this.value === i) return (t.data().activeState = this).title && t.attr("title", this.title), 
                        t.addClass(this.class), !1;
                    });
                }), l(this).trigger("change"), l(this).after(a), l(this).hide();
            }
        });
    }, i.prototype.validate = function() {
        return l(".required,.regexp,.date,.mandatory,.number,.validate", this.element).trigger("change"), 
        l(".invalid", this.element).length <= 0;
    }, i.prototype.destroy = function() {
        return l(this.element).each(function() {
            l(this).removeData("jsFormControls");
        });
    }, l.fn.jsFormControls = function(e) {
        if ("object" != typeof e && e) {
            const a = Array.prototype.slice.call(arguments, 1);
            if (1 != this.length) return this.each(function() {
                const t = l.data(this, "jsFormControls");
                if (t) return 0 !== e.indexOf("_") && t[e] ? t[e](...a) : (l.error("Method " + e + " does not exist on jQuery.jsFormControls"), 
                !1);
            });
            {
                const t = l(this).data("jsFormControls");
                return t ? 0 !== e.indexOf("_") && t[e] ? t[e](...a) : (l.error("Method " + e + " does not exist on jQuery.jsFormControls"), 
                !1) : void 0;
            }
        }
        return this.each(function() {
            l(this).data("jsFormControls") || l(this).data("jsFormControls", new i(this));
        });
    }, l.jsFormControls = function(t, e) {
        let a;
        if ("function" == typeof e) a = r[t], a && l.each(a, function() {
            e(this, l(this.element));
        }), o[t] = e; else if (a = r[t], a) {
            const i = e, s = Array.prototype.slice.call(arguments, 2);
            l.each(portlets, function() {
                this[i](...s);
            });
        }
    }, l.jsFormControls.Format = {
        format: function(t, e) {
            let a = l(t);
            return a.hasClass("dateTime") || a.hasClass("datetime") ? isNaN(e) ? e : l.jsFormControls.Format.dateTime(e) : a.hasClass("date") ? isNaN(e) ? e : l.jsFormControls.Format.date(e) : a.hasClass("time") ? isNaN(e) ? e : a.hasClass("number") ? l.jsFormControls.Format.timeNum(e) : l.jsFormControls.Format.time(e) : a.hasClass("currency") ? l.jsFormControls.Format.currency(e) : a.hasClass("select") ? e ? a.data().options && a.data().options[e] ? a.data().options[e] : e : "" : a.hasClass("bool") ? e ? a.data().true || (i18n ? i18n.label.yes : "X") : a.data().false || "" : a.hasClass("byte") ? isNaN(e) ? e : l.jsFormControls.Format.byte(e) : a.hasClass("decimal") ? (a.data().processor = l.jsFormControls.Format.getDecimal, 
            l.jsFormControls.Format.decimal(e)) : a.hasClass("vunit") ? (l(this).data().val = e, 
            a.data().processor = l.jsFormControls.Format.getVunit, l.jsFormControls.Format.vunit(e, a.attr("data-unit"))) : a.hasClass("percent") ? (a.data().processor = l.jsFormControls.Format.getPercent, 
            l.jsFormControls.Format.percent(e)) : a.hasClass("percentage") ? (a.data().processor = l.jsFormControls.Format.getPercent, 
            l.jsFormControls.Format.percent(e) + "%") : a.hasClass("humantime") ? (a.data().processor = l.jsFormControls.Format.getHumanTime, 
            l.jsFormControls.Format.humanTime(e)) : a.hasClass("timespan") ? l.jsFormControls.Format.timespan(e) : a.hasClass("phone") ? l.jsFormControls.Format.phone(e) : a.hasClass("timeday") ? e && l.jsFormControls.Format.time(Number(24 * e * 36e5)) : a.hasClass("humantimeday") ? e && (a.data().processor = l.jsFormControls.Format.getHumanTime, 
            l.jsFormControls.Format.humanTime(Number(24 * e * 36e5))) : e;
        },
        _getValue: function(t, e, a, i, s) {
            return void 0 === e && void 0 === a ? t : isNaN(t) || void 0 === e || void 0 === a ? void 0 : a;
        },
        checkBox: function(t, e, a, i, s) {
            return (a = l.jsFormControls.Format._getValue(t, e, a, i)) ? '<span class="ui-icon ui-icon-check">&nbsp;</span>' : '<span class="ui-icon ui-icon-close">&nbsp;</span>';
        },
        _getNumber: function(t) {
            if (!t) return null;
            let e = {
                groupingSeparator: ",",
                decimalSeparator: "."
            }, a = null, i = null;
            "undefined" != typeof i18n && i18n.number ? (e = i18n.number, i18n.currency && (a = i18n.currency.prefix, 
            i = i18n.currency.suffix)) : void 0 !== l && l(document).data().i18n?.number && (e = l(document).data().i18n.number, 
            l(document).data().i18n.currency && (a = l(document).data().i18n.currency.prefix, 
            i = l(document).data().i18n.currency.suffix)), t = "" + t, 0 < a?.length && 0 === t.indexOf(a) && (t = t.substring(a.length));
            var s = (t = (t = 0 < i?.length && 0 < t.indexOf(i) ? t.substring(0, t.length - i.length) : t).trim()).indexOf(e.groupingSeparator);
            return -1 !== s && (s >= t.length - 3 ? "." !== e.groupingSeparator && (t = t.replaceAll(e.groupingSeparator, ".")) : t = t.replaceAll(e.groupingSeparator, "")), 
            "." !== e.decimalSeparator && -1 !== t.indexOf(e.decimalSeparator) && (t = t.replaceAll(e.decimalSeparator, ".")), 
            Number(t);
        },
        _pad: function(t) {
            return (t < 10 ? "0" : "") + t;
        },
        asDate: function(t) {
            const e = l.jsFormControls.Format.asMoment(t);
            return e ? e.toJSDate ? e.toJSDate() : e.toDate || e : null;
        },
        asMoment: function(a) {
            let i = null;
            const e = [ i18n.date.format + " " + i18n.date.timeFormat, i18n.date.dateTimeFormat, i18n.date.format, i18n.date.longDateFormat, i18n.date.timeFormat, "d.M.y H:m", "d.M.y", "d/M/y H:m", "d/M/y", "M/dd/yy HH:mm", "M/dd/yyyy HH:mm" ];
            if (a.toFormat) return a;
            if ("undefined" != typeof luxon) return luxon.DateTime.isDateTime(a) ? a : isNaN(a) ? a.year ? luxon.DateTime.formObject(a) : (e.forEach(function(t) {
                if (i) return !1;
                try {
                    var e = luxon.DateTime.fromFormat(a, t);
                    if (e.isValid) return i = e, !1;
                } catch (t) {}
            }), i || (console.log("unable to parse " + a, e), i = luxon.DateTime.fromISO(a)), 
            i) : a.getTime ? luxon.DateTime.fromJSDate(a) : luxon.DateTime.fromMillis(a);
            if ("undefined" != typeof moment) {
                for (let t = 0; t < e.length; t++) e[t] = moment().toMomentFormatString(e[t]);
                l.each(e, function() {
                    if (i) return !1;
                    const t = moment(a, this, !0);
                    return t.isValid() ? (i = t, !1) : void 0;
                }), i = i || moment(a);
            }
            return i ? (i.toFormat = i.format, i) : new Date(a);
        },
        asNumber: function(t) {
            return l.jsFormControls.Format._getNumber(t);
        },
        phone: function(t) {
            if (!t) return t;
            if (!(t = (t = t.replace(/[^0-9+]/g, "")).startsWith("00") ? "+" + t.slice(2) : t).startsWith("+")) return t;
            let e, a;
            var i;
            if (t.startsWith("+1")) e = "1", a = t.slice(2); else for (i of [ 2, 3 ]) if (e = t.slice(1, i + 1), 
            a = t.slice(i + 1), 0 < a.length) break;
            let s;
            return s = "1" === e ? a.replace(/(\d{3})(\d{3})(\d{4})/, "$1-$2-$3") : a.replace(/(\d{3})(?=\d)/g, "$1 "), 
            `+${e} ${s.trim()}`;
        },
        byte: function(t) {
            if ("" === t || !t || isNaN(t)) return t;
            if (t < 1024) return t + " B";
            var e = Math.floor(Math.log(t) / Math.log(1024)), a = "KMGTPE".charAt(e - 1) + "B";
            return Math.round(10 * t / Math.pow(1024, e)) / 10 + a;
        },
        vunit: function(t, e) {
            if ("" === t || !t || isNaN(t)) return t;
            var a = t < 0;
            if (a && (t *= -1), t < 1e3) return (a ? "-" : "") + l.jsFormControls.Format.decimal(t) + " " + e;
            var i = Math.floor(Math.log(t) / Math.log(1e3)), e = "kmgtpe".charAt(i - 1) + e;
            return (a ? "-" : "") + l.jsFormControls.Format.decimal(Math.round(100 * t / Math.pow(1e3, i)) / 100) + " " + e;
        },
        decimal: function(t) {
            if ("" === t || !t || isNaN(t)) return t;
            let e;
            "undefined" != typeof i18n && i18n.number ? e = i18n.number : void 0 !== l && l(document).data().i18n?.number && (e = l(document).data().i18n.number);
            var a = t, i = .005 < Math.abs(t - Math.floor(t)) ? 2 : 0, s = e?.decimalSeparator || ".", n = e?.groupingSeparator || ",";
            const o = parseInt(a = Math.abs(+a || 0).toFixed(i), 10) + "";
            var r = o.length, r = 3 < r ? r % 3 : 0;
            return (t < 0 ? "-" : "") + (r ? o.substring(0, r) + n : "") + o.substring(r).replace(/(\d{3})(?=\d)/g, "$1" + n) + (i ? s + Math.abs(a - o).toFixed(i).slice(2) : "");
        },
        integer: function(t) {
            if ("" === t || !t || isNaN(t)) return t;
            let e;
            "undefined" != typeof i18n && i18n.number ? e = i18n.number : void 0 !== l && l(document).data().i18n?.number && (e = l(document).data().i18n.number);
            var a = e?.groupingSeparator || ",";
            const i = parseInt(Math.abs(+t || 0), 10) + "";
            var s = i.length, s = 3 < s ? s % 3 : 0;
            return (t < 0 ? "-" : "") + (s ? i.substring(0, s) + a : "") + i.substring(s).replace(/(\d{3})(?=\d)/g, "$1" + a);
        },
        getDecimal: function(t) {
            return "" === t ? 0 : l.jsFormControls.Format.asNumber(t);
        },
        getVunit: function(t) {
            return "" === num ? 0 : Number(t);
        },
        percent: function(t) {
            return "" === t || !t || isNaN(t) ? t : l.jsFormControls.Format.decimal(100 * t);
        },
        getPercent: function(t) {
            if (!t || "" === t) return 0;
            -1 !== t.indexOf("%") && (t = t.substring(0, t.length - 1));
            t = l.jsFormControls.Format.getDecimal(t);
            return Number(t) / 100;
        },
        currency: function(t, e, a, i, s) {
            if (!(a = l.jsFormControls.Format._getValue(t, e, a, i))) {
                if (e) return "&#160;";
                a = 0;
            }
            let n = l.jsFormControls.Format.decimal(a), o = null, r = null;
            return "undefined" != typeof i18n ? i18n.currency && (o = i18n.currency.prefix, 
            r = i18n.currency.suffix) : l(document).data().i18n?.number && l(document).data().i18n.currency && (o = l(document).data().i18n.currency.prefix, 
            r = l(document).data().i18n.currency.suffix), o && (n = o + n), r && (n += r), n;
        },
        dateTime: function(t, e, a, i, s) {
            return (a = l.jsFormControls.Format._getValue(t, e, a, i)) ? this.date(a) + " " + this.time(a) : e ? "&#160;" : "";
        },
        date: function(t, e, a, i, s) {
            if (!(a = l.jsFormControls.Format._getValue(t, e, a, i)) || "" === a) return e ? "&#160;" : "";
            if (isNaN(a)) return a;
            let n = null;
            if ("undefined" != typeof i18n ? n = i18n.date : l(document).data().i18n?.date && (n = l(document).data().i18n.date), 
            "undefined" != typeof luxon) return luxon.DateTime.fromMillis(Number(a)).toFormat(n.shortDateFormat);
            const o = new Date();
            o.setTime(a);
            let r = o.getYear();
            return r < 1900 && (r += 1900), l.format ? l.format.date(o, n.shortDateFormat) : this._pad(o.getDate()) + "." + this._pad(o.getMonth() + 1) + "." + this._pad(r);
        },
        timeNum: (t, e, a, i, s) => {
            i = (a = l.jsFormControls.Format._getValue(t, e, a, i)) % 100 + "";
            return (a < 1e3 ? "0" : "") + Math.floor(a / 100) + ":" + (i < 10 ? "0" : "") + i;
        },
        time: function(t, e, a, i, s) {
            if (!(a = l.jsFormControls.Format._getValue(t, e, a, i)) || "" === a) return e ? "&#160;" : "";
            if (isNaN(a)) return a;
            let n = "HH:mm";
            if ("undefined" != typeof i18n ? i18n.timeFormat ? n = i18n.timeFormat : i18n.date?.timeFormat && (n = i18n.date.timeFormat) : l(document).data().i18n && void 0 !== l(document).data().i18n.timeFormat && (n = l(document).data().i18n.timeFormat), 
            "undefined" != typeof luxon) return luxon.DateTime.fromMillis(a).toFormat(n);
            const o = new Date();
            return o.setTime(a), l.format ? l.format.date(o, n) : this._pad(o.getHours()) + ":" + this._pad(o.getMinutes());
        },
        timespan: function(t, e, a, i, s) {
            const n = (a = (a = l.jsFormControls.Format._getValue(t, e, a, i)) || "0").split(":");
            for (let e = 0; e < n.length; e++) {
                let t = Number(n[e]);
                t && "NaN" !== t || (t = 0), n[e] = this._pad(t);
            }
            return n.length <= 0 ? "0:00" : 1 == n.length ? "0:" + this._pad(Math.floor(n[0])) : 2 == n.length ? Math.floor(n[0]) + ":" + this._pad(Math.floor(n[1])) : Math.floor(n[0]) + ":" + this._pad(Math.floor(n[1])) + ":" + pad(Math.floor(n[2]));
        },
        humanTime: function(t, e, a, i, s) {
            if (a = l.jsFormControls.Format._getValue(t, e, a, i), isNaN(a)) return a && 0 !== a.length ? a : "-";
            t = a < 0;
            t && (a *= -1);
            e = Math.floor(a / 36e5);
            a -= 36e5 * e;
            i = Math.floor(a / 6e4);
            a -= 6e4 * i;
            let n = Math.floor(a / 1e3);
            a -= 1e3 * n;
            let o = t ? "-" : "";
            return 0 < e && (o += e + "h ", a = n = 0), 0 < i && (o += i + "m ", a = 0), 0 < n && (o += n + "s ", 
            a = 0), 0 < a && (o += a + "ms"), o.trim();
        },
        getHumanTime: function(e) {
            if (!e || "" === e) return 0;
            let a = 0, i = "", s = "";
            function n() {
                if ("" !== i) {
                    var t = Number(i);
                    switch (s) {
                      case "ms":
                      case "mill":
                        a += t;
                        break;

                      case "s":
                      case "secs":
                        a += 1e3 * t;
                        break;

                      case "":
                      case "m":
                      case "min":
                      case "minute":
                        a += 6e4 * t;
                        break;

                      case "h":
                      case "hour":
                        a += 36e5 * t;
                        break;

                      case "d":
                      case "day":
                      case "days":
                        a += 24 * t * 36e5;
                    }
                    s = "", i = "";
                }
            }
            var t = "-" === e.charAt(0) ? -1 : 1;
            for (let t = 0; t < e.length; t++) {
                var o = e.charAt(t);
                switch (o) {
                  case "0":
                  case "1":
                  case "2":
                  case "3":
                  case "4":
                  case "5":
                  case "6":
                  case "7":
                  case "8":
                  case "9":
                    "" !== s && n(), i += o;
                    break;

                  case "m":
                  case "i":
                  case "n":
                  case "s":
                  case "h":
                  case "o":
                  case "u":
                  case "r":
                  case "a":
                  case "e":
                  case "c":
                  case "y":
                  case "d":
                    s += o;
                }
            }
            return n(), a * t;
        }
    };
}(jQuery, window), String.prototype.trim = function() {
    return this.replace(/^\s+|\s+$/g, "");
}, String.prototype.startsWith = function(t) {
    return !(null === this || this.length <= 0) && (!(null === t || "null" == t || t.length <= 0) && this.substr(0, t.length) == t);
}, String.prototype.startsWithIgnoreCase = function(t) {
    return !(null === this || this.length <= 0) && (!(null === t || "null" == t || t.length <= 0) && this.substr(0, t.length).toLowerCase() == t.toLowerCase());
}, String.prototype.endsWith = function(t) {
    return !(null === this || this.length <= 0) && (!(null === t || "null" == t || t.length <= 0 || t.length > this.length) && this.substr(this.length - t.length) == t);
};